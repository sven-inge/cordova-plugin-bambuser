sudo: false

matrix:
  include:

  # Cordova / iOS
  - os: osx
    osx_image: xcode10.2
    language: objective-c
    env:
    - PLATFORM=ios
    - TOOLCHAIN=cordova
    before_install:
    - nvm install 8.16.0
    - nvm use 8.16.0
    - npm install -g cordova github:apache/cordova-paramedic ios-deploy
    install:
    - npm install
    script:
    # verify standalone
    - cordova-paramedic --platform ios --plugin $PWD
    # verify with other plugins
    - cordova-paramedic --platform ios --plugin $PWD --plugin cordova-plugin-camera

  # Cordova / Android
  - os: linux
    language: android
    dist: bionic
    jdk: oraclejdk9
    env:
    - PLATFORM=android
    - TOOLCHAIN=cordova
    - ABI=x86_64
    - API=25
    - ADB_INSTALL_TIMEOUT=8
    - ANDROID_HOME=${HOME}/android-sdk
    - ANDROID_TOOLS_URL="https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip"
    - EMU_FLAVOR=default # use google_apis flavor if no default flavor emulator
    - EMU_CHANNEL="" # use default / stable emulator channel normally
    - GRAVIS="https://raw.githubusercontent.com/DanySK/Gravis-CI/master/"
    - JDK="1.8"
    - TOOLS=${ANDROID_HOME}/tools
    # PATH order is incredibly important. e.g. the 'emulator' script exists in more than one place!
    - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}
    before_install:
    # https://github.com/ankidroid/Anki-Android/blob/master/.travis.yml
    # https://travis-ci.community/t/is-android-28-emulator-supported/1718/5

    # Set up JDK 8 for Android SDK - Java is universally needed: codacy, unit tests, emulators
    - curl "${GRAVIS}.install-jdk-travis.sh" --output ~/.install-jdk-travis.sh
    - export TARGET_JDK="${JDK}"
    - JDK="1.8"
    - source ~/.install-jdk-travis.sh

    # Set up Android SDK - this is needed everywhere but coverage finalization, so toggle on that
    - wget -q "${ANDROID_TOOLS_URL}" -O android-sdk-tools.zip
    - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
    - rm android-sdk-tools.zip
    - mkdir ~/.android # avoid harmless sdkmanager warning
    - echo 'count=0' > ~/.android/repositories.cfg # avoid harmless sdkmanager warning
    - yes | sdkmanager --licenses >/dev/null # accept all sdkmanager warnings
    - echo y | sdkmanager --no_https "platform-tools" >/dev/null
    - echo y | sdkmanager --no_https "tools" >/dev/null # A second time per Travis docs, gets latest versions
    - echo y | sdkmanager --no_https "build-tools;28.0.3" >/dev/null # Implicit gradle dependency - gradle drives changes
    - echo y | sdkmanager --no_https "platforms;android-28" >/dev/null # We need the API of the current compileSdkVersion from gradle.properties

    # In our setup, install only runs on matrix entries we want full emulator tests on
    # That only happens currently on linux, so this section can assume linux + emulator is desired
    # Download required emulator tools
    - echo y | sdkmanager --no_https "platforms;android-$API" >/dev/null # We need the API of the emulator we will run
    - echo y | sdkmanager --no_https $EMU_CHANNEL "emulator" >/dev/null
    - echo y | sdkmanager --no_https "system-images;android-$API;$EMU_FLAVOR;$ABI" >/dev/null # install our emulator

    # Set up KVM on linux for hardware acceleration. Manually here so it only happens for emulator tests, takes ~30s
    - sudo -E apt-get -yq --no-install-suggests --no-install-recommends install bridge-utils libpulse0 libvirt-bin qemu-kvm virtinst ubuntu-vm-builder
    - sudo adduser $USER libvirt
    - sudo adduser $USER kvm

    # Create an Android emulator
    - echo no | avdmanager create avd --force -n test -k "system-images;android-$API;$EMU_FLAVOR;$ABI" -c 10M
    - |
      EMU_PARAMS="-verbose -no-snapshot -no-window -camera-back none -camera-front none -selinux permissive -qemu -m 2048"
      EMU_COMMAND="emulator"
      if [[ $ABI =~ "x86" ]]; then
        if [ $API != "15" ]; then
          # API15 is using the canary channel right now, and emulator-headless is command not found?
          # this may break in the future when the current canaries are promoted but until now it works
          # for all but API15 on the canary channel
          EMU_COMMAND="emulator-headless"
        fi
      fi
      # This double "sudo" monstrosity is used to have Travis execute the
      # emulator with its new group permissions and help preserve the rule
      # of least privilege.
      sudo -E sudo -u $USER -E bash -c "${ANDROID_HOME}/emulator/${EMU_COMMAND} -avd test ${AUDIO} ${EMU_PARAMS} &"

    # Wait for emulator to be ready
    - |
      bootanim=""
      failcounter=0
      timeout_in_sec=600 # 10 minutes
      until [[ "$bootanim" =~ "stopped" ]]; do
        bootanim=`adb -e shell getprop init.svc.bootanim 2>&1 &`
        if [[ "$bootanim" =~ "device not found" || "$bootanim" =~ "device offline"
          || "$bootanim" =~ "running" || "$bootanim" =~  "error: no emulators found" ]]; then
          let "failcounter += 1"
          echo "Waiting for emulator to start"
          if [[ $failcounter -gt timeout_in_sec ]]; then
            echo "Timeout ($timeout_in_sec seconds) reached; failed to start emulator"
            exit 1
          fi
        fi
        sleep 1
      done
      echo "Emulator is ready"

    - adb shell input keyevent 82 &

    - nvm install 8.16.0
    - nvm use 8.16.0
    - npm install -g cordova github:apache/cordova-paramedic
    install:
    - npm install
    script:
    # verify standalone
    - cordova-paramedic --platform android --plugin $PWD
    # verify with other plugins
    - cordova-paramedic --platform android --plugin $PWD --plugin cordova-plugin-camera


  # Capacitor / iOS
  - os: osx
    osx_image: xcode10.2
    language: objective-c
    env:
    - PLATFORM=ios
    - TOOLCHAIN=capacitor
    before_install:
    - nvm install 8.16.0
    - nvm use 8.16.0
    install:
    - export CORDOVA_PLUGIN_BAMBUSER_PATH=$PWD
    - cd /tmp && npx @capacitor/cli create --npm-client npm captest captest com.example.captest
    - cd /tmp/captest && npx cap add $PLATFORM
    script:
    - cd /tmp/captest && npm install $CORDOVA_PLUGIN_BAMBUSER_PATH
    - cd /tmp/captest && npx cap sync
    - cd /tmp/captest && npx cap copy $PLATFORM

    # Build XCode project
    - cd /tmp/captest/ios/App && pod install
    - cd /tmp/captest/ios/App && xcodebuild -workspace App.xcworkspace -scheme App -sdk iphonesimulator ONLY_ACTIVE_ARCH=NO

  # Capacitor / Android
  - os: linux
    language: android
    jdk: oraclejdk8
    env:
    - PLATFORM=android
    - TOOLCHAIN=capacitor
    - ANDROID_API_LEVEL=28
    - ANDROID_BUILD_TOOLS_VERSION=28.0.3
    android:
      components:
      - tools
      - platform-tools-$ANDROID_BUILD_TOOLS_VERSION
      - build-tools-$ANDROID_BUILD_TOOLS_VERSION
      - android-$ANDROID_API_LEVEL
      - sys-img-x86-android-$ANDROID_API_LEVEL
      licenses:
      - 'android-sdk-preview-license-.+'
      - 'android-sdk-license-.+'
      - 'google-gdk-license-.+'
    before_install:
    - nvm install 8.16.0
    - nvm use 8.16.0
    install:
    - export CORDOVA_PLUGIN_BAMBUSER_PATH=$PWD
    - cd /tmp && npx @capacitor/cli create --npm-client npm captest captest com.example.captest
    - cd /tmp/captest && npx cap add $PLATFORM
    script:
    - cd /tmp/captest && npm install $CORDOVA_PLUGIN_BAMBUSER_PATH
    - cd /tmp/captest && npx cap sync
    - cd /tmp/captest && npx cap copy $PLATFORM

    # Build Android project
    - cd /tmp/captest/android && ./gradlew clean build --quiet --stacktrace
