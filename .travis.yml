sudo: false

matrix:
  include:

  # Cordova / iOS
  - os: osx
    osx_image: xcode10.2
    language: objective-c
    env:
    - PLATFORM=ios
    - TOOLCHAIN=cordova
    before_install:
    - nvm install 8.16.0
    - nvm use 8.16.0
    - npm install -g cordova github:apache/cordova-paramedic ios-deploy
    install:
    - npm install
    script:
    # verify standalone
    - cordova-paramedic --platform ios --plugin $PWD
    # verify with other camera plugins
    - cordova-paramedic --platform ios --plugin $PWD --plugin cordova-plugin-camera
    - cordova-paramedic --platform ios --plugin $PWD --plugin cordova-plugin-qrscanner

  # Cordova / Android
  - os: linux
    language: android
    jdk: oraclejdk8
    env:
    - PLATFORM=android
    - TOOLCHAIN=cordova
    - ADB_INSTALL_TIMEOUT=8
    - ABI=x86_64
    - API=25
    - EMU_FLAVOR=default # use google_apis flavor if no default flavor emulator
    # PATH order is incredibly important. e.g. the 'emulator' script exists in more than one place!
    - ANDROID_HOME=/usr/local/android-sdk
    - TOOLS=${ANDROID_HOME}/tools
    - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}
    before_install:
    # https://github.com/ankidroid/Anki-Android/blob/master/.travis.yml
    # https://travis-ci.community/t/is-android-28-emulator-supported/1718/5
    - echo 'count=0' > /home/travis/.android/repositories.cfg # Avoid harmless sdkmanager warning
    - echo y | sdkmanager "platform-tools" >/dev/null
    - echo y | sdkmanager "tools" >/dev/null # A second time per Travis docs, gets latest versions
    - echo y | sdkmanager "build-tools;28.0.3" >/dev/null # Implicit gradle dependency - gradle drives changes
    - echo y | sdkmanager "platforms;android-$API" >/dev/null # We need the API of the emulator we will run
    - echo y | sdkmanager "platforms;android-28" >/dev/null # We need the API of the current compileSdkVersion from gradle.properties
    - echo y | sdkmanager --channel=4 "emulator" >/dev/null # Use canary channel to get emulator 29.x for x86_64 image support
    - echo y | sdkmanager "extras;android;m2repository" >/dev/null
    - echo y | sdkmanager "system-images;android-$API;$EMU_FLAVOR;$ABI" >/dev/null # install our emulator
    - echo no | avdmanager create avd --force -n test -k "system-images;android-$API;$EMU_FLAVOR;$ABI" -c 10M
    - emulator -verbose -avd test -no-accel -no-snapshot -no-window $AUDIO -camera-back none -camera-front none -selinux permissive -qemu -m 2048 &
    - android-wait-for-emulator
    - adb shell input keyevent 82 &
    - nvm install 8.16.0
    - nvm use 8.16.0
    - npm install -g cordova github:apache/cordova-paramedic
    install:
    - npm install
    script:
    # verify standalone
    - cordova-paramedic --platform android --plugin $PWD
    # verify with other camera plugins
    - cordova-paramedic --platform android --plugin $PWD --plugin cordova-plugin-camera
    - cordova-paramedic --platform android --plugin $PWD --plugin cordova-plugin-qrscanner


  # Capacitor / iOS
  - os: osx
    osx_image: xcode10.2
    language: objective-c
    env:
    - PLATFORM=ios
    - TOOLCHAIN=capacitor
    before_install:
    - nvm install 8.16.0
    - nvm use 8.16.0
    install:
    - export CORDOVA_PLUGIN_BAMBUSER_PATH=$PWD
    - cd /tmp && npx @capacitor/cli create --npm-client npm captest captest com.example.captest
    - cd /tmp/captest && npx cap add $PLATFORM
    script:
    - cd /tmp/captest && npm install $CORDOVA_PLUGIN_BAMBUSER_PATH
    - cd /tmp/captest && npx cap sync
    - cd /tmp/captest && npx cap copy $PLATFORM

    # Build XCode project
    - cd /tmp/captest/ios/App && pod install
    - cd /tmp/captest/ios/App && xcodebuild -workspace App.xcworkspace -scheme App -sdk iphonesimulator ONLY_ACTIVE_ARCH=NO

  # Capacitor / Android
  - os: linux
    language: android
    jdk: oraclejdk8
    env:
    - PLATFORM=android
    - TOOLCHAIN=capacitor
    - ANDROID_API_LEVEL=28
    - ANDROID_BUILD_TOOLS_VERSION=28.0.3
    android:
      components:
      - tools
      - platform-tools-$ANDROID_BUILD_TOOLS_VERSION
      - build-tools-$ANDROID_BUILD_TOOLS_VERSION
      - android-$ANDROID_API_LEVEL
      - sys-img-x86-android-$ANDROID_API_LEVEL
      licenses:
      - 'android-sdk-preview-license-.+'
      - 'android-sdk-license-.+'
      - 'google-gdk-license-.+'
    before_install:
    - nvm install 8.16.0
    - nvm use 8.16.0
    install:
    - export CORDOVA_PLUGIN_BAMBUSER_PATH=$PWD
    - cd /tmp && npx @capacitor/cli create --npm-client npm captest captest com.example.captest
    - cd /tmp/captest && npx cap add $PLATFORM
    script:
    - cd /tmp/captest && npm install $CORDOVA_PLUGIN_BAMBUSER_PATH
    - cd /tmp/captest && npx cap sync
    - cd /tmp/captest && npx cap copy $PLATFORM

    # Build Android project
    - cd /tmp/captest/android && ./gradlew clean build --quiet --stacktrace
